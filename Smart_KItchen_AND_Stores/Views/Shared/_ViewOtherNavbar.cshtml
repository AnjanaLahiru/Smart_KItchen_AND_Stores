<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <link href="~/Content/Css/DashboardStyles.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
</head>
<body>
    <div class="store-container">
        <header class="dashboard-header">
            <div class="header-content">
                <div class="company-info">
                    <div class="company-title-line">
                        <h1>
                            <span class="main-company">NATURUB Exports International(PVT)LTD</span>
                            <span class="store-name">&nbsp;&nbsp; Smart Kitchen Store</span>
                        </h1>
                        <h2></h2>
                    </div>
                    <p class="welcome-text">Welcome!, @ViewBag.UserDisplayName</p>
                </div>
                <div class="header-actions">
                    <button class="mail-btn" onclick="openMail()">
                        <i class="fas fa-envelope"></i>
                    </button>
                    <button class="logout-btn" onclick="logout()">
                        Log Out
                    </button>
                </div>
            </div>
        </header>

        <div class="store-main">
            <aside class="store-sidebar">
                <nav class="sidebar-nav">
                    <div class="nav-item">
                        <button class="nav-btn has-submenu @(ViewContext.RouteData.Values["action"].ToString() == "ItemType" || ViewContext.RouteData.Values["action"].ToString() == "ItemCategory" || ViewContext.RouteData.Values["action"].ToString() == "ItemSubCategory" || ViewContext.RouteData.Values["action"].ToString() == "ItemCreation" ? "active" : "")" onclick="toggleMasterSubmenu()" id="masterBtn">
                            <i class="fas fa-cogs"></i>
                            Master
                        </button>
                        <div class="sub-nav" id="masterSubmenu">
                            <button class="sub-nav-btn @(ViewContext.RouteData.Values["action"].ToString() == "ItemType" ? "active" : "")" onclick="handleItemType()">
                                <i class="fas fa-tags"></i>
                                Item Type
                            </button>
                            <button class="sub-nav-btn @(ViewContext.RouteData.Values["action"].ToString() == "ItemCategory" ? "active" : "")" onclick="handleItemCategory()">
                                <i class="fas fa-list"></i>
                                Item Category
                            </button>
                            <button class="sub-nav-btn @(ViewContext.RouteData.Values["action"].ToString() == "ItemSubCategory" ? "active" : "")" onclick="handleItemSubCategory()">
                                <i class="fas fa-sitemap"></i>
                                Item Sub Category
                            </button>
                            <button class="sub-nav-btn @(ViewContext.RouteData.Values["action"].ToString() == "ItemCreation" ? "active" : "")" onclick="handleItemCreation()">
                                <i class="fas fa-plus-circle"></i>
                                Item Creation
                            </button>
                        </div>
                    </div>


                </nav>
                <div class="sidebar-footer">
                    <button class="back-btn" onclick="goBackToDashboard()">
                        <i class="fas fa-arrow-left"></i>
                        Back to Dashboard
                    </button>
                </div>
            </aside>

            <main class="store-content">
                @RenderBody()
            </main>
        </div>
    </div>

    <script>
        function toggleMasterSubmenu() {
            const masterBtn = document.getElementById('masterBtn');
            const masterSubmenu = document.getElementById('masterSubmenu');

            if (masterSubmenu.classList.contains('expanded')) {
                masterSubmenu.classList.remove('expanded');
                masterBtn.classList.remove('expanded');
            } else {
                masterSubmenu.classList.add('expanded');
                masterBtn.classList.add('expanded');
            }
        }

        function handleItemType() {
            setActiveMasterSubButton('ItemType');
            window.location.href = '@Url.Action("ItemType", "ItemType")';
        }

        function handleItemCategory() {
            setActiveMasterSubButton('ItemCategory');
            window.location.href = '@Url.Action("ItemCategory", "ItemCategory")';
        }

        function handleItemSubCategory() {
            setActiveMasterSubButton('ItemSubCategory');
            window.location.href = '@Url.Action("ItemSubCategory", "ItemSubCategory")';
        }

        function handleItemCreation() {
            setActiveMasterSubButton('ItemCreation');
            window.location.href = '@Url.Action("ItemCreation", "ItemCreation")';
        }



        function setActiveMasterSubButton(action) {
            document.querySelectorAll('.nav-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            document.querySelectorAll('.sub-nav-btn').forEach(btn => {
                btn.classList.remove('active');
            });

            document.getElementById('masterBtn').classList.add('active');

            document.querySelectorAll('.sub-nav-btn').forEach(btn => {
                if (btn.textContent.trim().replace(/\s+/g, '') === action.replace(/\s+/g, '')) {
                    btn.classList.add('active');
                }
            });

            document.getElementById('masterSubmenu').classList.add('expanded');
            document.getElementById('masterBtn').classList.add('expanded');
        }

        function goBackToDashboard() {
            window.location.href = '@Url.Action("Dashboard", "Dashboard")';
        }

        function openMail() {
            alert('Mail functionality - to be implemented');
        }

        function logout() {
            window.location.href = '@Url.Action("Logout", "Login")';
        }

        document.addEventListener('DOMContentLoaded', function() {
            console.log('Master layout loaded');

            const currentAction = '@ViewContext.RouteData.Values["action"]';

            if (currentAction === 'ItemType' || currentAction === 'ItemCategory' ||
                currentAction === 'ItemSubCategory' || currentAction === 'ItemCreation') {
                document.getElementById('masterSubmenu').classList.add('expanded');
                document.getElementById('masterBtn').classList.add('expanded');
                document.getElementById('masterBtn').classList.add('active');
            }

            if (currentAction === 'Kitchen1' || currentAction === 'Kitchen2') {
                document.getElementById('kitchenSubmenu').classList.add('expanded');
                document.getElementById('kitchenBtn').classList.add('expanded');
                document.getElementById('kitchenBtn').classList.add('active');
            }
        });
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>